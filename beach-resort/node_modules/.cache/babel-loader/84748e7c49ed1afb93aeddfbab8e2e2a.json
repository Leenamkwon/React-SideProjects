{"ast":null,"code":"var _jsxFileName = \"/Users/namkwon/Downloads/beach-resort/src/components/context.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport items from '../data';\nconst RoomContext = React.createContext();\n\nconst RoomProvider = ({\n  children\n}) => {\n  const [Rooms, setRooms] = useState([]);\n  const [sortedRooms, setSortedRooms] = useState([]);\n  const [featuredRooms, setFeaturedRooms] = useState([]);\n  const [loading, setloading] = useState([]);\n  useEffect(() => {\n    let roomsData = formatData(items);\n    let featured = roomsData.filter(room => room.feature === true);\n    set();\n  }, []);\n  const set = useCallback(() => {\n    setFeaturedRooms([...featuredRooms, featured]), [featuredRooms];\n  });\n\n  const formatData = items => {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let img = item.fields.images.map(image => image.fields.file.url);\n      let room = { ...item.fields,\n        img,\n        id\n      };\n      return room;\n    });\n    return tempItems;\n  };\n\n  return /*#__PURE__*/React.createElement(RoomContext.Provider, {\n    value: 'ㅇㅁㅇ',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nconst RoomConsumer = RoomContext.Consumer;\nexport { RoomProvider, RoomConsumer, RoomContext };","map":{"version":3,"sources":["/Users/namkwon/Downloads/beach-resort/src/components/context.js"],"names":["React","useState","useEffect","useCallback","items","RoomContext","createContext","RoomProvider","children","Rooms","setRooms","sortedRooms","setSortedRooms","featuredRooms","setFeaturedRooms","loading","setloading","roomsData","formatData","featured","filter","room","feature","set","tempItems","map","item","id","sys","img","fields","images","image","file","url","RoomConsumer","Consumer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,WAAW,GAAGL,KAAK,CAACM,aAAN,EAApB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACrC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,SAAS,GAAGC,UAAU,CAACd,KAAD,CAA1B;AACA,QAAIe,QAAQ,GAAGF,SAAS,CAACG,MAAV,CAAkBC,IAAD,IAAUA,IAAI,CAACC,OAAL,KAAiB,IAA5C,CAAf;AACAC,IAAAA,GAAG;AACJ,GAJQ,EAIN,EAJM,CAAT;AAMA,QAAMA,GAAG,GAAGpB,WAAW,CAAC,MAAM;AAC5BW,IAAAA,gBAAgB,CAAC,CAAC,GAAGD,aAAJ,EAAmBM,QAAnB,CAAD,CAAhB,EAAgD,CAACN,aAAD,CAAhD;AACD,GAFsB,CAAvB;;AAIA,QAAMK,UAAU,GAAId,KAAD,IAAW;AAC5B,QAAIoB,SAAS,GAAGpB,KAAK,CAACqB,GAAN,CAAWC,IAAD,IAAU;AAClC,UAAIC,EAAE,GAAGD,IAAI,CAACE,GAAL,CAASD,EAAlB;AACA,UAAIE,GAAG,GAAGH,IAAI,CAACI,MAAL,CAAYC,MAAZ,CAAmBN,GAAnB,CAAwBO,KAAD,IAAWA,KAAK,CAACF,MAAN,CAAaG,IAAb,CAAkBC,GAApD,CAAV;AACA,UAAIb,IAAI,GAAG,EAAE,GAAGK,IAAI,CAACI,MAAV;AAAkBD,QAAAA,GAAlB;AAAuBF,QAAAA;AAAvB,OAAX;AAEA,aAAON,IAAP;AACD,KANe,CAAhB;AAOA,WAAOG,SAAP;AACD,GATD;;AAWA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqChB,QAArC,CADF;AAGD,CA9BD;;AAgCA,MAAM2B,YAAY,GAAG9B,WAAW,CAAC+B,QAAjC;AAEA,SAAS7B,YAAT,EAAuB4B,YAAvB,EAAqC9B,WAArC","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport items from '../data';\n\nconst RoomContext = React.createContext();\n\nconst RoomProvider = ({ children }) => {\n  const [Rooms, setRooms] = useState([]);\n  const [sortedRooms, setSortedRooms] = useState([]);\n  const [featuredRooms, setFeaturedRooms] = useState([]);\n  const [loading, setloading] = useState([]);\n\n  useEffect(() => {\n    let roomsData = formatData(items);\n    let featured = roomsData.filter((room) => room.feature === true);\n    set();\n  }, []);\n\n  const set = useCallback(() => {\n    setFeaturedRooms([...featuredRooms, featured]), [featuredRooms];\n  });\n\n  const formatData = (items) => {\n    let tempItems = items.map((item) => {\n      let id = item.sys.id;\n      let img = item.fields.images.map((image) => image.fields.file.url);\n      let room = { ...item.fields, img, id };\n\n      return room;\n    });\n    return tempItems;\n  };\n\n  return (\n    <RoomContext.Provider value={'ㅇㅁㅇ'}>{children}</RoomContext.Provider>\n  );\n};\n\nconst RoomConsumer = RoomContext.Consumer;\n\nexport { RoomProvider, RoomConsumer, RoomContext };\n"]},"metadata":{},"sourceType":"module"}