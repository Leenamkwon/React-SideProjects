{"ast":null,"code":"var _jsxFileName = \"/Users/namkwon/Documents/React-side-projects/beach-resort/src/contexts/rootContext.js\";\nimport React, { createContext, useCallback, useEffect, useReducer } from 'react';\nimport items from '../data';\nimport RoomReducer from '../Reducer/RootReducer';\nconst RoomContext = createContext();\n\nconst RootContext = ({\n  children\n}) => {\n  const [data, dispatch] = useReducer(RoomReducer, {\n    rooms: [],\n    sortedRooms: [],\n    featuredRooms: [],\n    loading: true\n  });\n  const formatData = useCallback(items => {\n    let rooms = items.map(item => {\n      const id = item.sys.id;\n      const images = item.fields.images.map(img => img.fields.file.url);\n      return { ...item.fields,\n        id: id,\n        images: images\n      };\n    });\n    return rooms;\n  }, []);\n  useEffect(() => {\n    const rooms = formatData(items);\n    const featuredRooms = rooms.filter(room => room.featured === true);\n    dispatch({\n      type: 'INIT',\n      rooms\n    });\n    dispatch({\n      type: 'FEATURE_ROOM',\n      featuredRooms\n    });\n    dispatch({\n      type: 'LOADING',\n      loading: false\n    });\n  }, [formatData]);\n  return /*#__PURE__*/React.createElement(RoomContext.Provider, {\n    value: { ...data\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport { RootContext, RoomContext };","map":{"version":3,"sources":["/Users/namkwon/Documents/React-side-projects/beach-resort/src/contexts/rootContext.js"],"names":["React","createContext","useCallback","useEffect","useReducer","items","RoomReducer","RoomContext","RootContext","children","data","dispatch","rooms","sortedRooms","featuredRooms","loading","formatData","map","item","id","sys","images","fields","img","file","url","filter","room","featured","type"],"mappings":";AAAA,OAAOA,KAAP,IACEC,aADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,UAJF,QAKO,OALP;AAMA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,OAAOC,WAAP,MAAwB,wBAAxB;AAEA,MAAMC,WAAW,GAAGN,aAAa,EAAjC;;AAEA,MAAMO,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACpC,QAAM,CAACC,IAAD,EAAOC,QAAP,IAAmBP,UAAU,CAACE,WAAD,EAAc;AAC/CM,IAAAA,KAAK,EAAE,EADwC;AAE/CC,IAAAA,WAAW,EAAE,EAFkC;AAG/CC,IAAAA,aAAa,EAAE,EAHgC;AAI/CC,IAAAA,OAAO,EAAE;AAJsC,GAAd,CAAnC;AAOA,QAAMC,UAAU,GAAGd,WAAW,CAAEG,KAAD,IAAW;AACxC,QAAIO,KAAK,GAAGP,KAAK,CAACY,GAAN,CAAWC,IAAD,IAAU;AAC9B,YAAMC,EAAE,GAAGD,IAAI,CAACE,GAAL,CAASD,EAApB;AACA,YAAME,MAAM,GAAGH,IAAI,CAACI,MAAL,CAAYD,MAAZ,CAAmBJ,GAAnB,CAAwBM,GAAD,IAASA,GAAG,CAACD,MAAJ,CAAWE,IAAX,CAAgBC,GAAhD,CAAf;AACA,aAAO,EAAE,GAAGP,IAAI,CAACI,MAAV;AAAkBH,QAAAA,EAAE,EAAEA,EAAtB;AAA0BE,QAAAA,MAAM,EAAEA;AAAlC,OAAP;AACD,KAJW,CAAZ;AAKA,WAAOT,KAAP;AACD,GAP6B,EAO3B,EAP2B,CAA9B;AASAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,KAAK,GAAGI,UAAU,CAACX,KAAD,CAAxB;AACA,UAAMS,aAAa,GAAGF,KAAK,CAACc,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,QAAL,KAAkB,IAAzC,CAAtB;AAEAjB,IAAAA,QAAQ,CAAC;AAAEkB,MAAAA,IAAI,EAAE,MAAR;AAAgBjB,MAAAA;AAAhB,KAAD,CAAR;AACAD,IAAAA,QAAQ,CAAC;AAAEkB,MAAAA,IAAI,EAAE,cAAR;AAAwBf,MAAAA;AAAxB,KAAD,CAAR;AACAH,IAAAA,QAAQ,CAAC;AAAEkB,MAAAA,IAAI,EAAE,SAAR;AAAmBd,MAAAA,OAAO,EAAE;AAA5B,KAAD,CAAR;AACD,GAPQ,EAON,CAACC,UAAD,CAPM,CAAT;AASA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE,EAAE,GAAGN;AAAL,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2CD,QAA3C,CADF;AAGD,CA7BD;;AA+BA,SAASD,WAAT,EAAsBD,WAAtB","sourcesContent":["import React, {\n  createContext,\n  useCallback,\n  useEffect,\n  useReducer,\n} from 'react';\nimport items from '../data';\n\nimport RoomReducer from '../Reducer/RootReducer';\n\nconst RoomContext = createContext();\n\nconst RootContext = ({ children }) => {\n  const [data, dispatch] = useReducer(RoomReducer, {\n    rooms: [],\n    sortedRooms: [],\n    featuredRooms: [],\n    loading: true,\n  });\n\n  const formatData = useCallback((items) => {\n    let rooms = items.map((item) => {\n      const id = item.sys.id;\n      const images = item.fields.images.map((img) => img.fields.file.url);\n      return { ...item.fields, id: id, images: images };\n    });\n    return rooms;\n  }, []);\n\n  useEffect(() => {\n    const rooms = formatData(items);\n    const featuredRooms = rooms.filter((room) => room.featured === true);\n\n    dispatch({ type: 'INIT', rooms });\n    dispatch({ type: 'FEATURE_ROOM', featuredRooms });\n    dispatch({ type: 'LOADING', loading: false });\n  }, [formatData]);\n\n  return (\n    <RoomContext.Provider value={{ ...data }}>{children}</RoomContext.Provider>\n  );\n};\n\nexport { RootContext, RoomContext };\n"]},"metadata":{},"sourceType":"module"}