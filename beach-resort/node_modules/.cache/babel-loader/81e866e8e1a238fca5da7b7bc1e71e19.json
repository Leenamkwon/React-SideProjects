{"ast":null,"code":"var _jsxFileName = \"/Users/namkwon/Downloads/beach-resort/src/components/context.js\";\nimport React, { Component } from 'react';\nimport items from '../data';\nconst RoomContext = React.createContext();\n\nclass RoomProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rooms: [],\n      sortedRooms: [],\n      featuredRooms: [],\n      loading: true,\n      type: 'all',\n      capacity: 1,\n      price: 0,\n      minPrice: 0,\n      maxPrice: 0,\n      minSize: 0,\n      maxSize: 0,\n      breakfast: false,\n      pets: false\n    };\n\n    this.formatData = items => {\n      let tempItems = items.map(item => {\n        let id = item.sys.id;\n        let images = item.fields.images.map(image => image.fields.file.url);\n        let room = { ...item.fields,\n          images,\n          id\n        };\n        return room;\n      });\n      return tempItems;\n    };\n\n    this.getRoom = slug => {\n      let tempRooms = [...this.state.rooms];\n      const room = tempRooms.find(room => room.slug === slug);\n      return room;\n    };\n\n    this.handleChange = event => {\n      const type = event.target.type;\n      const name = event.target.name;\n      const value = event.target.value;\n      console.log(type, name, value);\n    };\n\n    this.filterRooms = () => {};\n\n    this.typeSearch = room => {\n      const tempArr = [];\n      return room.map(item => tempArr.includes(item) ? false : tempArr.push(item.type));\n    };\n  }\n\n  componentDidMount() {\n    let rooms = this.formatData(items);\n    let featuredRooms = rooms.filter(room => room.featured === true);\n    let maxPrice = Math.max(...rooms.map(item => item.price));\n    let maxSize = Math.max(...rooms.map(item => item.size));\n    this.setState(prevState => {\n      return { ...prevState,\n        rooms,\n        featuredRooms,\n        sortedRooms: rooms,\n        loading: false,\n        price: maxPrice,\n        maxPrice,\n        maxSize\n      };\n    });\n    this.typeSearch(rooms);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(RoomContext.Provider, {\n      value: { ...this.state,\n        getRoom: this.getRoom,\n        handleChange: this.handleChange,\n        typeSearch: this.typeSearch\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst RoomConsumer = RoomContext.Consumer;\n\nconst withRoomConsumer = Component => {\n  return function ConsumerWrapper(props) {\n    return /*#__PURE__*/React.createElement(RoomConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, value => /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    })));\n  };\n};\n\nexport { RoomProvider, RoomConsumer, RoomContext, withRoomConsumer };","map":{"version":3,"sources":["/Users/namkwon/Downloads/beach-resort/src/components/context.js"],"names":["React","Component","items","RoomContext","createContext","RoomProvider","state","rooms","sortedRooms","featuredRooms","loading","type","capacity","price","minPrice","maxPrice","minSize","maxSize","breakfast","pets","formatData","tempItems","map","item","id","sys","images","fields","image","file","url","room","getRoom","slug","tempRooms","find","handleChange","event","target","name","value","console","log","filterRooms","typeSearch","tempArr","includes","push","componentDidMount","filter","featured","Math","max","size","setState","prevState","render","props","children","RoomConsumer","Consumer","withRoomConsumer","ConsumerWrapper"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,WAAW,GAAGH,KAAK,CAACI,aAAN,EAApB;;AAEA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnCK,KADmC,GAC3B;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,WAAW,EAAE,EAFP;AAGNC,MAAAA,aAAa,EAAE,EAHT;AAINC,MAAAA,OAAO,EAAE,IAJH;AAKNC,MAAAA,IAAI,EAAE,KALA;AAMNC,MAAAA,QAAQ,EAAE,CANJ;AAONC,MAAAA,KAAK,EAAE,CAPD;AAQNC,MAAAA,QAAQ,EAAE,CARJ;AASNC,MAAAA,QAAQ,EAAE,CATJ;AAUNC,MAAAA,OAAO,EAAE,CAVH;AAWNC,MAAAA,OAAO,EAAE,CAXH;AAYNC,MAAAA,SAAS,EAAE,KAZL;AAaNC,MAAAA,IAAI,EAAE;AAbA,KAD2B;;AAAA,SAsCnCC,UAtCmC,GAsCrBlB,KAAD,IAAW;AACtB,UAAImB,SAAS,GAAGnB,KAAK,CAACoB,GAAN,CAAWC,IAAD,IAAU;AAClC,YAAIC,EAAE,GAAGD,IAAI,CAACE,GAAL,CAASD,EAAlB;AACA,YAAIE,MAAM,GAAGH,IAAI,CAACI,MAAL,CAAYD,MAAZ,CAAmBJ,GAAnB,CAAwBM,KAAD,IAAWA,KAAK,CAACD,MAAN,CAAaE,IAAb,CAAkBC,GAApD,CAAb;AACA,YAAIC,IAAI,GAAG,EAAE,GAAGR,IAAI,CAACI,MAAV;AAAkBD,UAAAA,MAAlB;AAA0BF,UAAAA;AAA1B,SAAX;AACA,eAAOO,IAAP;AACD,OALe,CAAhB;AAMA,aAAOV,SAAP;AACD,KA9CkC;;AAAA,SAgDnCW,OAhDmC,GAgDxBC,IAAD,IAAU;AAClB,UAAIC,SAAS,GAAG,CAAC,GAAG,KAAK5B,KAAL,CAAWC,KAAf,CAAhB;AACA,YAAMwB,IAAI,GAAGG,SAAS,CAACC,IAAV,CAAgBJ,IAAD,IAAUA,IAAI,CAACE,IAAL,KAAcA,IAAvC,CAAb;AACA,aAAOF,IAAP;AACD,KApDkC;;AAAA,SAsDnCK,YAtDmC,GAsDnBC,KAAD,IAAW;AACxB,YAAM1B,IAAI,GAAG0B,KAAK,CAACC,MAAN,CAAa3B,IAA1B;AACA,YAAM4B,IAAI,GAAGF,KAAK,CAACC,MAAN,CAAaC,IAA1B;AACA,YAAMC,KAAK,GAAGH,KAAK,CAACC,MAAN,CAAaE,KAA3B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY/B,IAAZ,EAAkB4B,IAAlB,EAAwBC,KAAxB;AACD,KA3DkC;;AAAA,SA6DnCG,WA7DmC,GA6DrB,MAAM,CAAE,CA7Da;;AAAA,SA+DnCC,UA/DmC,GA+DrBb,IAAD,IAAU;AACrB,YAAMc,OAAO,GAAG,EAAhB;AACA,aAAOd,IAAI,CAACT,GAAL,CAAUC,IAAD,IACdsB,OAAO,CAACC,QAAR,CAAiBvB,IAAjB,IAAyB,KAAzB,GAAiCsB,OAAO,CAACE,IAAR,CAAaxB,IAAI,CAACZ,IAAlB,CAD5B,CAAP;AAGD,KApEkC;AAAA;;AAiBnCqC,EAAAA,iBAAiB,GAAG;AAClB,QAAIzC,KAAK,GAAG,KAAKa,UAAL,CAAgBlB,KAAhB,CAAZ;AACA,QAAIO,aAAa,GAAGF,KAAK,CAAC0C,MAAN,CAAclB,IAAD,IAAUA,IAAI,CAACmB,QAAL,KAAkB,IAAzC,CAApB;AACA,QAAInC,QAAQ,GAAGoC,IAAI,CAACC,GAAL,CAAS,GAAG7C,KAAK,CAACe,GAAN,CAAWC,IAAD,IAAUA,IAAI,CAACV,KAAzB,CAAZ,CAAf;AACA,QAAII,OAAO,GAAGkC,IAAI,CAACC,GAAL,CAAS,GAAG7C,KAAK,CAACe,GAAN,CAAWC,IAAD,IAAUA,IAAI,CAAC8B,IAAzB,CAAZ,CAAd;AACA,SAAKC,QAAL,CAAeC,SAAD,IAAe;AAC3B,aAAO,EACL,GAAGA,SADE;AAELhD,QAAAA,KAFK;AAGLE,QAAAA,aAHK;AAILD,QAAAA,WAAW,EAAED,KAJR;AAKLG,QAAAA,OAAO,EAAE,KALJ;AAMLG,QAAAA,KAAK,EAAEE,QANF;AAOLA,QAAAA,QAPK;AAQLE,QAAAA;AARK,OAAP;AAUD,KAXD;AAaA,SAAK2B,UAAL,CAAgBrC,KAAhB;AACD;;AAkCDiD,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,WAAD,CAAa,QAAb;AACE,MAAA,KAAK,EAAE,EACL,GAAG,KAAKlD,KADH;AAEL0B,QAAAA,OAAO,EAAE,KAAKA,OAFT;AAGLI,QAAAA,YAAY,EAAE,KAAKA,YAHd;AAILQ,QAAAA,UAAU,EAAE,KAAKA;AAJZ,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQG,KAAKa,KAAL,CAAWC,QARd,CADF;AAYD;;AAnFkC;;AAsFrC,MAAMC,YAAY,GAAGxD,WAAW,CAACyD,QAAjC;;AAEA,MAAMC,gBAAgB,GAAI5D,SAAD,IAAe;AACtC,SAAO,SAAS6D,eAAT,CAAyBL,KAAzB,EAAgC;AACrC,wBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIjB,KAAD,iBAAW,oBAAC,SAAD,oBAAeiB,KAAf;AAAsB,MAAA,OAAO,EAAEjB,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADd,CADF;AAKD,GAND;AAOD,CARD;;AAUA,SAASnC,YAAT,EAAuBsD,YAAvB,EAAqCxD,WAArC,EAAkD0D,gBAAlD","sourcesContent":["import React, { Component } from 'react';\nimport items from '../data';\n\nconst RoomContext = React.createContext();\n\nclass RoomProvider extends Component {\n  state = {\n    rooms: [],\n    sortedRooms: [],\n    featuredRooms: [],\n    loading: true,\n    type: 'all',\n    capacity: 1,\n    price: 0,\n    minPrice: 0,\n    maxPrice: 0,\n    minSize: 0,\n    maxSize: 0,\n    breakfast: false,\n    pets: false,\n  };\n\n  componentDidMount() {\n    let rooms = this.formatData(items);\n    let featuredRooms = rooms.filter((room) => room.featured === true);\n    let maxPrice = Math.max(...rooms.map((item) => item.price));\n    let maxSize = Math.max(...rooms.map((item) => item.size));\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        rooms,\n        featuredRooms,\n        sortedRooms: rooms,\n        loading: false,\n        price: maxPrice,\n        maxPrice,\n        maxSize,\n      };\n    });\n\n    this.typeSearch(rooms);\n  }\n\n  formatData = (items) => {\n    let tempItems = items.map((item) => {\n      let id = item.sys.id;\n      let images = item.fields.images.map((image) => image.fields.file.url);\n      let room = { ...item.fields, images, id };\n      return room;\n    });\n    return tempItems;\n  };\n\n  getRoom = (slug) => {\n    let tempRooms = [...this.state.rooms];\n    const room = tempRooms.find((room) => room.slug === slug);\n    return room;\n  };\n\n  handleChange = (event) => {\n    const type = event.target.type;\n    const name = event.target.name;\n    const value = event.target.value;\n    console.log(type, name, value);\n  };\n\n  filterRooms = () => {};\n\n  typeSearch = (room) => {\n    const tempArr = [];\n    return room.map((item) =>\n      tempArr.includes(item) ? false : tempArr.push(item.type)\n    );\n  };\n\n  render() {\n    return (\n      <RoomContext.Provider\n        value={{\n          ...this.state,\n          getRoom: this.getRoom,\n          handleChange: this.handleChange,\n          typeSearch: this.typeSearch,\n        }}\n      >\n        {this.props.children}\n      </RoomContext.Provider>\n    );\n  }\n}\n\nconst RoomConsumer = RoomContext.Consumer;\n\nconst withRoomConsumer = (Component) => {\n  return function ConsumerWrapper(props) {\n    return (\n      <RoomConsumer>\n        {(value) => <Component {...props} context={value} />}\n      </RoomConsumer>\n    );\n  };\n};\n\nexport { RoomProvider, RoomConsumer, RoomContext, withRoomConsumer };\n"]},"metadata":{},"sourceType":"module"}