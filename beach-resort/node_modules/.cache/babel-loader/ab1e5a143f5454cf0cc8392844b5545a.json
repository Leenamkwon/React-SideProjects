{"ast":null,"code":"var _jsxFileName = \"/Users/namkwon/Documents/React-side-projects/beach-resort/src/contexts/rootContext.js\";\nimport React, { createContext, useCallback, useEffect, useState } from 'react';\nimport items from '../data';\nconst RoomContext = createContext();\n\nconst RootContext = ({\n  children\n}) => {\n  const [data, setData] = useState({\n    rooms: [],\n    sortedRooms: [],\n    featuredRooms: [],\n    loading: true\n  });\n\n  const formatData = items => {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n      let room = { ...item.fields,\n        id,\n        images\n      };\n      return room;\n    });\n    useEffect(() => {\n      setData(prevState => {\n        return { ...prevState,\n          rooms: tempItems\n        };\n      });\n      console.log(data);\n    }, []);\n  };\n\n  useEffect(() => {\n    let forMatRooms = formatData(items);\n    setData(prevState => {\n      return { ...prevState,\n        rooms: forMatRooms\n      };\n    });\n    console.log(data);\n  }, [formatData]);\n  return /*#__PURE__*/React.createElement(RoomContext.Provider, {\n    value: { ...data\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport { RootContext, RoomContext };","map":{"version":3,"sources":["/Users/namkwon/Documents/React-side-projects/beach-resort/src/contexts/rootContext.js"],"names":["React","createContext","useCallback","useEffect","useState","items","RoomContext","RootContext","children","data","setData","rooms","sortedRooms","featuredRooms","loading","formatData","tempItems","map","item","id","sys","images","fields","image","file","url","room","prevState","console","log","forMatRooms"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,WAA/B,EAA4CC,SAA5C,EAAuDC,QAAvD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,WAAW,GAAGL,aAAa,EAAjC;;AAEA,MAAMM,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACpC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC;AAC/BO,IAAAA,KAAK,EAAE,EADwB;AAE/BC,IAAAA,WAAW,EAAE,EAFkB;AAG/BC,IAAAA,aAAa,EAAE,EAHgB;AAI/BC,IAAAA,OAAO,EAAE;AAJsB,GAAD,CAAhC;;AAOA,QAAMC,UAAU,GAAIV,KAAD,IAAW;AAC5B,QAAIW,SAAS,GAAGX,KAAK,CAACY,GAAN,CAAWC,IAAD,IAAU;AAClC,UAAIC,EAAE,GAAGD,IAAI,CAACE,GAAL,CAASD,EAAlB;AACA,UAAIE,MAAM,GAAGH,IAAI,CAACI,MAAL,CAAYD,MAAZ,CAAmBJ,GAAnB,CAAwBM,KAAD,IAAWA,KAAK,CAACD,MAAN,CAAaE,IAAb,CAAkBC,GAApD,CAAb;AACA,UAAIC,IAAI,GAAG,EAAE,GAAGR,IAAI,CAACI,MAAV;AAAkBH,QAAAA,EAAlB;AAAsBE,QAAAA;AAAtB,OAAX;AACA,aAAOK,IAAP;AACD,KALe,CAAhB;AAMAvB,IAAAA,SAAS,CAAC,MAAM;AACdO,MAAAA,OAAO,CAAEiB,SAAD,IAAe;AACrB,eAAO,EAAE,GAAGA,SAAL;AAAgBhB,UAAAA,KAAK,EAAEK;AAAvB,SAAP;AACD,OAFM,CAAP;AAGAY,MAAAA,OAAO,CAACC,GAAR,CAAYpB,IAAZ;AACD,KALQ,EAKN,EALM,CAAT;AAMD,GAbD;;AAeAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI2B,WAAW,GAAGf,UAAU,CAACV,KAAD,CAA5B;AACAK,IAAAA,OAAO,CAAEiB,SAAD,IAAe;AACrB,aAAO,EAAE,GAAGA,SAAL;AAAgBhB,QAAAA,KAAK,EAAEmB;AAAvB,OAAP;AACD,KAFM,CAAP;AAGAF,IAAAA,OAAO,CAACC,GAAR,CAAYpB,IAAZ;AACD,GANQ,EAMN,CAACM,UAAD,CANM,CAAT;AAQA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE,EAAE,GAAGN;AAAL,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2CD,QAA3C,CADF;AAGD,CAlCD;;AAoCA,SAASD,WAAT,EAAsBD,WAAtB","sourcesContent":["import React, { createContext, useCallback, useEffect, useState } from 'react';\nimport items from '../data';\n\nconst RoomContext = createContext();\n\nconst RootContext = ({ children }) => {\n  const [data, setData] = useState({\n    rooms: [],\n    sortedRooms: [],\n    featuredRooms: [],\n    loading: true,\n  });\n\n  const formatData = (items) => {\n    let tempItems = items.map((item) => {\n      let id = item.sys.id;\n      let images = item.fields.images.map((image) => image.fields.file.url);\n      let room = { ...item.fields, id, images };\n      return room;\n    });\n    useEffect(() => {\n      setData((prevState) => {\n        return { ...prevState, rooms: tempItems };\n      });\n      console.log(data);\n    }, []);\n  };\n\n  useEffect(() => {\n    let forMatRooms = formatData(items);\n    setData((prevState) => {\n      return { ...prevState, rooms: forMatRooms };\n    });\n    console.log(data);\n  }, [formatData]);\n\n  return (\n    <RoomContext.Provider value={{ ...data }}>{children}</RoomContext.Provider>\n  );\n};\n\nexport { RootContext, RoomContext };\n"]},"metadata":{},"sourceType":"module"}