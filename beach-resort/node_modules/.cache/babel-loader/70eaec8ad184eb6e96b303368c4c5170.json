{"ast":null,"code":"var _jsxFileName = \"/Users/namkwon/Downloads/beach-resort/src/components/context.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport items from '../data';\nconst RoomContext = React.createContext();\n\nconst RoomProvider = ({\n  children\n}) => {\n  // const [Rooms, setRooms] = useState([]);\n  // const [sortedRooms, setSortedRooms] = useState([]);\n  // const [featuredRooms, setFeaturedRooms] = useState([]);\n  // const [loading, setloading] = useState([]);\n  const [update, setUpdate] = useState({\n    rooms: [],\n    sorted: [],\n    featured: [],\n    loading: true\n  });\n  useEffect(() => {\n    const updateData = () => {\n      let rooms = formatData(items);\n      let featured = rooms.filter(room => room.feature === true);\n      setUpdate({\n        rooms,\n        featured,\n        sorted: rooms,\n        loading: false\n      });\n    };\n\n    updateData();\n    console.log(update);\n  }, []);\n\n  const formatData = items => {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let img = item.fields.images.map(image => image.fields.file.url);\n      let room = { ...item.fields,\n        img,\n        id\n      };\n      return room;\n    });\n    return tempItems;\n  };\n\n  return /*#__PURE__*/React.createElement(RoomContext.Provider, {\n    value: 'ㅇㅁㅇ',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nconst RoomConsumer = RoomContext.Consumer;\nexport { RoomProvider, RoomConsumer, RoomContext };","map":{"version":3,"sources":["/Users/namkwon/Downloads/beach-resort/src/components/context.js"],"names":["React","useState","useEffect","useCallback","items","RoomContext","createContext","RoomProvider","children","update","setUpdate","rooms","sorted","featured","loading","updateData","formatData","filter","room","feature","console","log","tempItems","map","item","id","sys","img","fields","images","image","file","url","RoomConsumer","Consumer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,WAAW,GAAGL,KAAK,CAACM,aAAN,EAApB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACrC;AACA;AACA;AACA;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC;AACnCU,IAAAA,KAAK,EAAE,EAD4B;AAEnCC,IAAAA,MAAM,EAAE,EAF2B;AAGnCC,IAAAA,QAAQ,EAAE,EAHyB;AAInCC,IAAAA,OAAO,EAAE;AAJ0B,GAAD,CAApC;AAOAZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,UAAU,GAAG,MAAM;AACvB,UAAIJ,KAAK,GAAGK,UAAU,CAACZ,KAAD,CAAtB;AACA,UAAIS,QAAQ,GAAGF,KAAK,CAACM,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,OAAL,KAAiB,IAAxC,CAAf;AAEAT,MAAAA,SAAS,CAAC;AAAEC,QAAAA,KAAF;AAASE,QAAAA,QAAT;AAAmBD,QAAAA,MAAM,EAAED,KAA3B;AAAkCG,QAAAA,OAAO,EAAE;AAA3C,OAAD,CAAT;AACD,KALD;;AAOAC,IAAAA,UAAU;AACVK,IAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAZ;AACD,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMO,UAAU,GAAIZ,KAAD,IAAW;AAC5B,QAAIkB,SAAS,GAAGlB,KAAK,CAACmB,GAAN,CAAWC,IAAD,IAAU;AAClC,UAAIC,EAAE,GAAGD,IAAI,CAACE,GAAL,CAASD,EAAlB;AACA,UAAIE,GAAG,GAAGH,IAAI,CAACI,MAAL,CAAYC,MAAZ,CAAmBN,GAAnB,CAAwBO,KAAD,IAAWA,KAAK,CAACF,MAAN,CAAaG,IAAb,CAAkBC,GAApD,CAAV;AACA,UAAId,IAAI,GAAG,EAAE,GAAGM,IAAI,CAACI,MAAV;AAAkBD,QAAAA,GAAlB;AAAuBF,QAAAA;AAAvB,OAAX;AAEA,aAAOP,IAAP;AACD,KANe,CAAhB;AAOA,WAAOI,SAAP;AACD,GATD;;AAWA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCd,QAArC,CADF;AAGD,CAtCD;;AAwCA,MAAMyB,YAAY,GAAG5B,WAAW,CAAC6B,QAAjC;AAEA,SAAS3B,YAAT,EAAuB0B,YAAvB,EAAqC5B,WAArC","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport items from '../data';\n\nconst RoomContext = React.createContext();\n\nconst RoomProvider = ({ children }) => {\n  // const [Rooms, setRooms] = useState([]);\n  // const [sortedRooms, setSortedRooms] = useState([]);\n  // const [featuredRooms, setFeaturedRooms] = useState([]);\n  // const [loading, setloading] = useState([]);\n  const [update, setUpdate] = useState({\n    rooms: [],\n    sorted: [],\n    featured: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    const updateData = () => {\n      let rooms = formatData(items);\n      let featured = rooms.filter((room) => room.feature === true);\n\n      setUpdate({ rooms, featured, sorted: rooms, loading: false });\n    };\n\n    updateData();\n    console.log(update);\n  }, []);\n\n  const formatData = (items) => {\n    let tempItems = items.map((item) => {\n      let id = item.sys.id;\n      let img = item.fields.images.map((image) => image.fields.file.url);\n      let room = { ...item.fields, img, id };\n\n      return room;\n    });\n    return tempItems;\n  };\n\n  return (\n    <RoomContext.Provider value={'ㅇㅁㅇ'}>{children}</RoomContext.Provider>\n  );\n};\n\nconst RoomConsumer = RoomContext.Consumer;\n\nexport { RoomProvider, RoomConsumer, RoomContext };\n"]},"metadata":{},"sourceType":"module"}